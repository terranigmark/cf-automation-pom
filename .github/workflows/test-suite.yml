name: CI test-suite-regresion
run-name: CI ${{ github.ref_name }}

on:
  push:
    branches: ["main", "gha-prueba"]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Instalar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pytest selenium webdriver-manager pytest-html pytest-cov behave pytest-bdd
          fi

      - name: Instalar Google Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Ejecutar pruebas con Pytest
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          SAUCE_USER: ${{ secrets.SAUCE_USER }}
          SAUCE_PASSWORD: ${{ secrets.SAUCE_PASSWORD }}
        run: |
          mkdir -p reports
          xvfb-run -a pytest -q --maxfail=1 --disable-warnings \
            --html=reports/pytest-report.html --self-contained-html \
            --junitxml=reports/junit.xml \
            --cov=. --cov-report=term-missing --cov-report=xml:reports/coverage.xml

      - name: Carga de artefactos (reportes y screenshots)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            reports/**
            **/screenshots/**
          if-no-files-found: ignore